version: '3.7'

services:
  redis:
    image: redis:latest
    container_name: sagivor-redis-server
    networks:
      - my-network

  db:
    image: postgres:12.0-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    networks:
      - my-network
    env_file:
      - ./.env

  backend:
    restart: unless-stopped
    build:
      context: .
      dockerfile: ./docker/backend/Dockerfile
    volumes:
      - static_volume:/app/static
      - media_volume:/app/media
    entrypoint: /app/docker/backend/wsgi-entrypoint.sh
    networks:
      - my-network
    depends_on:
      - db
    env_file:
      - ./.env
    environment:
      - REDIS_HOST=redis

  bot:
    restart: unless-stopped
    build:
      context: .
      dockerfile: ./docker/backend/Dockerfile
    entrypoint: /app/docker/backend/bot-entrypoint.sh
    networks:
      - my-network
    depends_on:
      - db
      - redis
    env_file:
      - ./.env

  nginx:
    restart: unless-stopped
    build:
      context: .
      dockerfile: ./docker/nginx/Dockerfile
    ports:
      - 8000:80
    volumes:
      - ./docker/nginx/dev:/etc/nginx/conf.d
      - static_volume:/app/static
      - media_volume:/app/media
    networks:
      - my-network
    depends_on:
      - db
      - backend

  celery:
    restart: always
    build:
      context: .
      dockerfile: ./docker/backend/Dockerfile
    volumes:
      - .:/code
    command: celery -A sagivor worker -l info
    depends_on:
      - redis
      - backend
      - bot

  celery-beat:
    build:
      context: .
      dockerfile: ./docker/backend/Dockerfile
    command: celery -A sagivor beat -l info
    depends_on:
      - redis
      - db
      - celery
      - backend
    restart: always


volumes:
  static_volume:
  postgres_data:
  media_volume:
  redis_data:

networks:
  my-network:
